#include <iostream>
#include <X11/Xlib.h>
#include <termios.h>
#include <unistd.h>
#include <fcntl.h>


// quit program if user types q
bool kbhit() {
  struct termios oldt, newt;
  int ch; // character ofc
  int oldf;

  // save terminal settings
  tcgetattr(STDIN_FILENO, &oldt);
  newt = oldt;

  // disable canonical mode and echo
  newt.c_lflag &= ~(ICANON | ECHO);
  tcsetattr(STDIN_FILENO, TCSANOW, &newt);
  
  oldf = fcntl(STDIN_FILENO, F_GETFL, 0);
  fcntl(STDIN_FILENO, F_SETFL, oldf | O_NONBLOCK);

  // read character
  ch = getchar();

  // restore terminal
  tcsetattr(STDIN_FILENO, TCSANOW, &oldt);
  fcntl(STDIN_FILENO, F_SETFL, oldf);

  if (ch != EOF) {
    return true;
  } 

  return false;
}

void jump_to_spotify() {
  // command to jump to pause_spotify: 
  //  wmctrl -x -a spotify.Spotify

  // jumps to spotify wherever it is on your WM
  system("wmctrl -x -a spotify.Spotify");
}


void pause_spotify() {
  // emulats play/pause button on keyboard.
  system("xdotool key  XF86AudioPlay");
}


int main() {
  Display* display = XOpenDisplay(nullptr);
  if (!display) return -1;
  
  // color to track
  std::cout << "Press q to exit..\n";
  
  Window root = DefaultRootWindow(display);
  Window returned_root, returned_child;
  
  int root_x, root_y;
  int win_x, win_y;
  unsigned int mask;
  int seconds_at_corner = 0;
  
  // assumes spotify is already playing.
  bool is_spotify_paused = false; 

  // moves pointer :)
  while (true) {

    // exit on esc
    if (kbhit()) {
      char ch = getchar();
      std::cout << "you pressed: " << ch << std::endl;
      if (ch == 'q') {
        std::cout << "exiting!" << std::endl;
        break;
      }
    }
  
    if (!display) {
      std::cerr << "Display is not found [null]!" << std::endl;
    }
    
    if (XQueryPointer(display, root, &returned_root, &returned_child, &root_x, &root_y, &win_x, &win_y, &mask)) 
    {

      printf("mouse position: (%d, %d)\n", root_x, root_y);
     
      // increment seconds_at_corner for the amount of seconds cursor is on bottom left corner
      if ((root_x == 0) && (root_y == 1599)) 
      {
        seconds_at_corner++;
      }else{
        seconds_at_corner == 0;
      }
      
      
      if (seconds_at_corner >= 2) 
      {
        // allows program to know when spotify is paused.
        is_spotify_paused = !is_spotify_paused;      
        
        // logs corresponding action 
        if (is_spotify_paused) {
          printf("pausing spotify! :0");
        }else{
          printf("unpausing spotify! :)");
        }
        // jump to spotify window for cool looking fx

        // function that unpauses and pauses spotify.
        pause_spotify();
        
        
        // prevents forever loop
        seconds_at_corner = 0;
      }

      // check every second 
      usleep(1000000);
    }
  }
  
  // close display connection
  XCloseDisplay(display);
  
  return 0;
} 
